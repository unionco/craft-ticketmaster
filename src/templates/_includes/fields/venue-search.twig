{% import "_includes/forms" as forms %}

{% includeJsFile '//cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.11/lodash.min.js' %}

{%- set class = [
    'text',
    (class is defined and class ? class : null),
    (size is defined and size ? null : 'fullwidth')
]|filter|join(' ') %}

<div class="venue-listing">
    <div class="toolbar">
        <div class="flex">
            <div class="flex-grow texticon clearable">
                <div id="venue-search" class="autosuggest-container">
                    {% verbatim %}
                    <vue-autosuggest
                            :suggestions="filteredOptions"
                            :getSuggestionValue="getSuggestionValue"
                            :input-props="inputProps"
                            :limit="limit"
                            @selected="onSelected">
                        <template slot-scope="{suggestion}">
                            {{suggestion.item.name}}
                            <span class="light">â€“ {{suggestion.item.city.name}}, {{suggestion.item.state ? suggestion.item.state.stateCode : ''}}</span>
                        </template>
                    </vue-autosuggest>
                    {% endverbatim %}
                </div>
            </div>
            <div class="spinner invisible"></div>
        </div>
    </div>
</div>

{% js %}
var fieldMap = [
    { name: 'title', value: 'name' },
    { name: 'fields[tmVenueId]', value: 'id' },
    { name: 'fields[payload][url]', value: 'url' },
    { name: 'fields[payload][address][line1]', value: 'address.line1' },
    { name: 'fields[payload][address][line2]', value: 'address.line2' },
    { name: 'fields[payload][city][name]', value: 'city.name' },
    { name: 'fields[payload][state][stateCode]', value: 'state.stateCode' },
    { name: 'fields[payload][postalCode]', value: 'postalCode' },
    { name: 'fields[payload][parkingDetail]', value: 'parkingDetail' },
    { name: 'fields[payload][accessibleSeatingDetail]', value: 'accessibleSeatingDetail' },
    { name: 'fields[payload][boxOfficeInfo][phoneNumberDetail]', value: 'boxOfficeInfo.phoneNumberDetail' },
    { name: 'fields[payload][boxOfficeInfo][openHoursDetail]', value: 'boxOfficeInfo.openHoursDetail' },
    { name: 'fields[payload][boxOfficeInfo][acceptedPaymentDetail]', value: 'boxOfficeInfo.acceptedPaymentDetail' },
    { name: 'fields[payload][boxOfficeInfo][willCallDetail]', value: 'boxOfficeInfo.willCallDetail' },
    { name: 'fields[payload][generalInfo][generalRule]', value: 'generalInfo.generalRule' },
    { name: 'fields[payload][generalInfo][childRule]', value: 'generalInfo.childRule' },
];

new Vue({
    el: document.querySelector('.venue-listing'),
    
    data() {
        {% block data %}
        var data = {{ {
            selected: '',
            key: key,
            filteredOptions: [],
            suggestions: [],
            inputProps: {
                class: class,
                initialValue: value ?? '',
                name: 'title'|namespaceInputName,
                autofocus: autofocus ?? false,
                disabled: disabled ?? false,
                title: title ?? '',
                placeholder: 'Search Ticketmaster Venues...',
            },
            limit: 10
        }|json_encode|raw }};
        data.inputProps.onInputChange = this.onInputChange;
        {% endblock %}
        return data;
    },

    methods: {
        onSelected(option) {
            this.selected = option.item;
            var _this = this;
            console.log(option.item);

            _.forEach(fieldMap, function(map) {
                $('[name="'+map.name+'"]').val(_.get(option.item, map.value));
            });
        },

        onInputChange(text) {
            if (text === '' || text === undefined || text.length < 3) {
                this.filteredOptions = this.suggestions;
                return;
            }
            
            var _this = this;
            clearTimeout(this.timeout);
            this.timeout = setTimeout(function() {
                _this.search(text);
            }, 750);
        },
        
        search(value) {
            var _this = this;
            $.ajax({
                type: "GET",
                url: "https://app.ticketmaster.com/discovery/v2/venues.json",
                async: true,
                dataType: 'json',
                data: {
                    apikey: this.key,
                    keyword: value
                },
                success: function (response) {
                    if (response && response._embedded && response._embedded.venues.length) {
                        _this.filteredOptions = [{ data: response._embedded.venues }];
                    }
                },
                error: function (err) {
                    console.log(err);
                }
            });
        },

        getSuggestionValue(suggestion) {
            return suggestion.item.name || suggestion.item;
        }
    }
});
{% endjs %}